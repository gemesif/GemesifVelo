apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion '26.0.2'

    def versionPropsFile = file('version.properties')
    def versionBuild
    def versionBuildDate

    def getDate = {
        def date = new Date()
        def formattedDate = date.format('yyyy MM dd - HHmmss')
        return formattedDate
    }

    // println ".............................." + getDate()

    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
        versionBuildDate = versionProps['VERSION_BUILD_DATE']
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    def autoIncrementBuildNumber = {

        if (versionPropsFile.canRead()) {
            def Properties versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
            versionProps['VERSION_BUILD'] = versionBuild.toString()
            versionProps['VERSION_BUILD_DATE'] = getDate()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else {
            // throw new GradleException("Could not read version.properties!")
            throw new FileNotFoundException("Could not read version.properties!")
        }
    }

    defaultConfig {
        applicationId "com.product.gemesif.gemesifvelo"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.0.0." + versionBuild.toString() + "." + versionBuildDate
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    // Compile Options
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    gradle.taskGraph.whenReady {taskGraph ->
        if (taskGraph.hasTask(assembleDebug)) {  /* when run debug task */
            autoIncrementBuildNumber()
        } else if (taskGraph.hasTask(assembleRelease)) { /* when run release task */
            autoIncrementBuildNumber()
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support:design:25.3.1'
    testCompile 'junit:junit:4.12'
    compile 'org.jetbrains:annotations-java5:15.0'
}
